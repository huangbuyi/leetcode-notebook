/* 
从感染源开始，查找所有连接的节点，如果连接的节点中包含两个及以上感染源，移除改节点无法阻止感染。
如果只含一个感染源，那么移除这个节点，其所连接的节点都不会被感染。因此，要移除连接最多节点，且不连接其它感染源的感染源。
*/

/**
 * @param {number[][]} graph
 * @param {number[]} initial
 * @return {number}
 */
var minMalwareSpread = function (graph, initial) {
  var visited = new Array(graph.length), sources = {}, max = 0, min = Infinity, res

  for (var i = 0; i < initial.length; i++) {
    min = Math.min(initial[i], min)
    sources[initial[i]] = true
  }

  for (var i = 0; i < initial.length; i++) {
    var idx = initial[i]
    if (!visited[idx]) {
      var stack = [idx], multi = false, infected = 0
      visited[idx] = true
      while (stack.length > 0) {
        var k = stack.pop()
        for (var j = 0; j < graph[0].length; j++) {
          if (graph[k][j] === 1 && !visited[j]) {
            visited[j] = true
            infected++
            stack.push(j)
            if (sources[j]) {
              multi = true
            }
          }
        }
      }

      if (!multi && infected > max) {
        max = infected
        res = idx
      }
    }
  }

  return res || min
};